<?php

/**
 * @file
 * Installation and update of the node_authlink module.
 */

/**
 * Implements hook_schema().
 */
function node_authlink_schema() {
  $schema['node_authlink_nodes'] = array(
    'description' => 'Table for store authorization keys.',
    'fields' => array(
      'nid'       => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'authkey'   => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
      ),
      'created'   => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('nid'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function node_authlink_install() {
  backdrop_set_message(t('To setup Node authorize link module go to Structure â†’ Content types â†’ edit â†’ Node authorize link.'));
}

/**
 * Migrate settings from variable to config.
 */
function node_authlink_update_1000() {
  $config = config('node_authlink.settings');

  foreach (node_type_get_names() as $type => $name) {
    if (!$config->isNew()) {
      continue;
    }
    $type_setting = array(
      'enable' => update_variable_get('node_authlink_enable_' . $type, FALSE),
      'grants' => update_variable_get('node_authlink_grants_' . $type, array()),
      'expire' => update_variable_get('node_authlink_expire_' . $type, 0),
    );
    $config->set($type, $type_setting);

    update_variable_del('node_authlink_enable_' . $type);
    update_variable_del('node_authlink_grants_' . $type);
    update_variable_del('node_authlink_expire_' . $type);
  }
  $config->save();
}

/**
 * Implements hook_update_dependencies().
 */
function node_authlink_update_dependencies() {
  $dependencies['node_authlink'][1000] = array(
    'node' => 1006,
  );
  return $dependencies;
}
